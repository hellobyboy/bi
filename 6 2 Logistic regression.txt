from IPython import get_ipython
from IPython.display import display
import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split


Data = {'Feature1': [1, 2, 3, 4, 5],
 	  'Feature2': [3, 4, 5, 6, 7],
        'Target': [5, 6, 7, 8, 9]}
df = pd.DataFrame(Data)
X = df[['Feature1', 'Feature2']]
Y = df['Target']

X_train, X_test, Y_train, Y_test = train_test_split(X, Y,test_size=0.2,random_state=42)

model = LogisticRegression()
model.fit(X_train, Y_train)

Y_pred = model.predict(X_test)

accuracy = accuracy_score(Y_test, Y_pred)

print(f'Accuracy: {accuracy:.3f}')
print('Classification Report:')
print(classification_report(Y_test, Y_pred, zero_division=0))  
print('Confusion Matrix:')
print(confusion_matrix(Y_test, Y_pred)) 
 
plt.scatter(Y_test, Y_pred)
plt.xlabel('Actual Values')
plt.ylabel('Predicted Values')
plt.title('Logistic Regression')
plt.show()

